<Window x:Class="WorkTimeLogger.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WorkTimeLogger"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="WorkTimeLogger" Height="350" MinHeight="190" Width="525" WindowStartupLocation="CenterScreen" ShowInTaskbar="False" WindowStyle="ToolWindow"
        Closing="Window_Closing">

    <Window.Resources>

        <!-- DataGrid Background -->
        <LinearGradientBrush x:Key="BlueLightGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFEAF3FF"/>
            <GradientStop Offset="0.654" Color="#FFC0DEFF"/>
            <GradientStop Offset="1" Color="#FFC0D9FB"/>
        </LinearGradientBrush>

        <!-- DataGrid style -->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Background" Value="{StaticResource BlueLightGradientBrush}" />
            <Setter Property="BorderBrush" Value="#FFA6CCF2" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="#FDFFD0" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="#FFD3D0" />
            <Setter Property="RowHeaderWidth" Value="0" />
        </Style>

        <!--<Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Rectangle x:Name="background"
                                   Fill="{TemplateBinding Background}"/>
                                <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="background" Property="Opacity" Value="0.1"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Window.Resources>

    <DockPanel>
        <!--<tb:TaskbarIcon x:Name="MyNotifyIcon" IconSource="/Resources/hourglass-not-done.ico" ToolTipText="{Binding TimeSpent}"  />-->
        
        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="5,0,5,0">
            <TextBlock Text="Stories" TextWrapping="Wrap" VerticalAlignment="Bottom" FontFamily="Cambria" FontSize="21.333">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="#FF437CA6"/>
                </TextBlock.Foreground>
            </TextBlock>
        </DockPanel>

        <StatusBar DockPanel.Dock="Bottom" x:Name="StatusBar" VerticalAlignment="Bottom" BorderBrush="Black" BorderThickness="1">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Row="0" Grid.ColumnSpan="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Total time spent: " TextWrapping="NoWrap"/>
                    <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding TotalTimeSpent}" TextWrapping="Wrap" HorizontalAlignment="Right"/>
                </Grid>
            </StatusBarItem>
            <StatusBarItem Grid.Row="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Button Command="{Binding StartWork}" Content="Start" ToolTip="Start the clock for the selected work item">
                    <!--<Button.Style>
                        <Style>
                            <Setter Property="Button.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border" Background="MediumSeaGreen" Opacity="50">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Border" Property="Background" Value="DarkSeaGreen">
                                                    --><!--<Setter.Value>
                                                        <LinearGradientBrush>
                                                            <GradientStop Color="DarkSeaGreen" Offset="0.0" />
                                                            <GradientStop Color="DarkSeaGreen" Offset="0.6" />
                                                            <GradientStop Color="DarkSeaGreen" Offset="1.0" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>--><!--
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Opacity" Value="20" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>-->
                </Button>
            </StatusBarItem>
            <StatusBarItem Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Button Command="{Binding StopWork}" Content="Stop" ToolTip="Stop the clock"></Button>
            </StatusBarItem>
        </StatusBar>

        <DataGrid x:Name="MainGrid" 
                          ItemsSource="{Binding WorkItemList}" 
                          SelectedItem="{Binding SelectedItem}" 
                          AutoGenerateColumns="False" 
                          DockPanel.Dock="Top"
                          VerticalAlignment="Top"
                          DataContextChanged="OnMainGridDataContextChanged"
                          SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Width="63" Binding="{Binding WorkItemID}" IsReadOnly="false" />
                <DataGridTextColumn Header="Work item" Width="*" Binding="{Binding Name}" IsReadOnly="false" />
                <DataGridTextColumn Header="Time spent" Width="*" Binding="{Binding TimeSpent}" IsReadOnly="true" />
            </DataGrid.Columns>
        </DataGrid>

    </DockPanel>
</Window>